version = 3.7.11
runner.dialect = "scala3"
project.git = true
preset = default
align.preset = most
maxColumn = 120
docstrings {
  style = Asterisk
  oneline = fold
  // wrap=yesしたい所だけど、意図的に入れている単独の改行が失われるので…
  wrap = no
}
spaces.inImportCurlyBraces = true
indentOperator.topLevelOnly = true
rewrite {
  rules = [SortModifiers, Imports]
  imports {
    sort = scalastyle
    groups = [
      ["java\\..*", "javax\\..*"],
      ["scala\\..*", "org.scalajs\\..*"],
      ["sbt\\..*"],
      ["jp.seraphr\\..*"],
      [".*"]]
  }
}

newlines {
  // punct: punctuation( non-alphanum symbols of length 1 )によって1行の長さ上限を超える場合は改行を入れない
  // slc:  single-line comment によって1行の長さ上限を超える場合は改行を入れない
  avoidForSimpleOverflow = [punct, slc]
  neverBeforeJsNative = true
  // fluent apiの呼び出し連鎖が１行に収まらない場合、１メソッド１行で改行する
  selectChains = unfold
  topLevelStatementBlankLines = [
    {
      // def / var（含む再代入） / valが複数行である場合、かならず後に1行の空行を入れる
      // align.presetによって、意図しないalignmentが行われるのを抑止する（複数行での定義のあとにアラインされても読みやすくはならない）
      regex = "(Defn.Def)|(Defn.Val)|(Defn.var)|(Term.Assign)"
      minBreaks = 1
      blanks = {
        before = 0
        after = 1
        beforeEndMarker = 0
      }
    }
  ]
}